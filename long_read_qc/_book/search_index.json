[["01-Long_read_QC.html", "Long read Quality Control Chapter 1 Introduction", " Long read Quality Control Matthew Gemmell &amp; Helen Hipperson 2021-01-28 Chapter 1 Introduction This practical session aims to introduce you to Long read Quality Control. The topics covered are: Acquiring the workshop data Example of PacBio quality control Example of ONT quality control "],["02-Intro.html", "Chapter 2 Introduction 2.1 The data", " Chapter 2 Introduction 2.1 The data The data for today is in the “QC_workshop” directory that you copied into your home directory (“~”) in the Illumina QC day. If you do not have this directory the command to copy it to your home directory is below. cp -r /pub39/tea/matthew/NEOF/QC_workshop/ ~ "],["03-PB.html", "Chapter 3 PacBio", " Chapter 3 PacBio "],["04-ONT.html", "Chapter 4 ONT 4.1 File formats 4.2 Basecalling and demultiplexxing 4.3 QC of fastq file 4.4 Porechop", " Chapter 4 ONT 4.1 File formats 4.1.1 Summary file 4.1.2 Bam file 4.1.3 fastq file 4.2 Basecalling and demultiplexxing (Here give a quick intro to guides from basecalling and demultiplexxing of ONT data) 4.3 QC of fastq file Explain why we are focussing on fastq file Before carrying out any specific commands we will first move into the relevant directory. cd ~/QC_workshop/ONT_QC/ Look in the directory called data and you will notice there are a few directories. You can see the contents of all these directories with the below command. ls data/* You will notice that each directory has one fastq file. ONT data likes to be organised with data for one sample being in one file. This is reflected in the ONT software we will use that likes to be pointed to a directory with one sample in it. To start with we will only use the fastq file within the directory called “Acinetobacter.” As you may have figured out this contains ONT sequencing data of an Acinetobacter genome. Specifically the data is a subset of the SRA (Sequence Read Archive) Run: SRR7119550. 4.3.1 NanoStat First step is to acquire stats of the sequences in our fastq file. We will use NanoStat (https://github.com/wdecoster/nanostat). NanoStat is one of the scripts of NanoPack (https://github.com/wdecoster/nanopack). We will also use the scripts NanoPlot and NanoFilt. We want to have a tidy set of directories at the end of this as it would be a large mess to have all the output files in the current directory. We will therefore be making directories and subdirectories to send our output. mkdir nanostats Finally we will now run NanoStat. The options used are: -n : File name/path for the output. -t : Number of threads the script can use. --fastq : zData is in fastq format. Other options that can be used instead are --fasta, --summary, and --bam. NanoStat -n nanostats/Acinetobacter_nanostats.tsv \\ -t 4 --fastq ./data/Acinetobacter_genome_ONT.fastq Now we can look at the output with any software in Linux that can view text files. In this case we will use the convenient less. less nanostats/Acinetobacter_nanostats.tsv The files contains four section with informative headers. These are: General summary A list of general summary metrics. Number, percentage and megabases of reads above quality cutoffs Based on the mean quality value of a read. Top 5 highest mean basecall quality scores and their read lengths Shows the top 5 reads based on mean quality score. Top 5 longest reads and their mean basecall quality score Shows the top 5 reads based on read length. 4.4 Porechop (Intro to porechop and useage Mention here that guppy(?) carries out porechop Porechop is no longer supported but additionally there is no alternative) cp -r /pub39/tea/matthew/NEOF/QC_workshop/ ~ "]]
